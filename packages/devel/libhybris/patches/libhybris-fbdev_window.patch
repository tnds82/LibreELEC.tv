diff --git a/include/EGL/eglext.h b/include/EGL/eglext.h
index 910455c..679b87e 100644
--- a/include/EGL/eglext.h
+++ b/include/EGL/eglext.h
@@ -34,7 +34,7 @@ extern "C" {
 
 /* Header file version number */
 /* Current version at http://www.khronos.org/registry/egl/ */
-/* $Revision: 18699 $ on $Date: 2012-07-31 03:04:59 -0700 (Tue, 31 Jul 2012) $ */
+/* $Revision: 18903 $ on $Date: 2012-08-14 23:33:48 -0700 (Tue, 14 Aug 2012) $ */
 #define EGL_EGLEXT_VERSION 14
 
 #ifndef EGL_KHR_config_attribs
@@ -456,24 +456,6 @@ typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC)(
 #endif
 #endif
 
-
-#ifndef EGL_EXT_swap_buffers_with_damage
-#define EGL_EXT_swap_buffers_with_damage 1
-#ifdef EGL_EGLEXT_PROTOTYPES
-EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageEXT( EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects);
-#endif /* EGL_EGLEXT_PROTOTYPES */
-typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC)(EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects);
-#endif
-
-
-#ifndef EGL_EXT_buffer_age
-#define EGL_EXT_buffer_age 1
-#define EGL_BUFFER_AGE_EXT			0x313D
-#endif
-
-
-#include <EGL/eglmesaext.h>
-
 #ifdef __cplusplus
 }
 #endif
diff --git a/include/EGL/eglplatform.h b/include/EGL/eglplatform.h
index b8df075..abd7fb0 100644
--- a/include/EGL/eglplatform.h
+++ b/include/EGL/eglplatform.h
@@ -1,150 +1,55 @@
-#ifndef __eglplatform_h_
-#define __eglplatform_h_
-
 /*
-** Copyright (c) 2007-2009 The Khronos Group Inc.
-**
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-
-/* Platform-specific types and definitions for egl.h
- * $Revision: 12306 $ on $Date: 2010-08-25 09:51:28 -0700 (Wed, 25 Aug 2010) $
- *
- * Adopters may modify khrplatform.h and this file to suit their platform.
- * You are encouraged to submit all modifications to the Khronos group so that
- * they can be included in future versions of this file.  Please submit changes
- * by sending them to the public Khronos Bugzilla (http://khronos.org/bugzilla)
- * by filing a bug against product "EGL" component "Registry".
- */
-
-#include <KHR/khrplatform.h>
-
-/* Macros used in EGL function prototype declarations.
- *
- * EGL functions should be prototyped as:
- *
- * EGLAPI return-type EGLAPIENTRY eglFunction(arguments);
- * typedef return-type (EXPAPIENTRYP PFNEGLFUNCTIONPROC) (arguments);
- *
- * KHRONOS_APICALL and KHRONOS_APIENTRY are defined in KHR/khrplatform.h
+ * This confidential and proprietary software may be used only as
+ * authorised by a licensing agreement from ARM Limited
+ * (C) COPYRIGHT 2008-2010, 2013 ARM Limited
+ * ALL RIGHTS RESERVED
+ * The entire notice above must be reproduced on all authorised
+ * copies and copies may only be made to the extent permitted
+ * by a licensing agreement from ARM Limited.
  */
 
-#ifndef LIBHYBRIS_WANTS_MESA_X11_HEADERS
-#define MESA_EGL_NO_X11_HEADERS
-#endif
+#ifndef __EGLPLATFORM_H__
+#define __EGLPLATFORM_H__
 
-#ifndef EGLAPI
-#define EGLAPI KHRONOS_APICALL
+#ifdef __cplusplus
+extern "C" {
 #endif
 
 #ifndef EGLAPIENTRY
-#define EGLAPIENTRY  KHRONOS_APIENTRY
+#define EGLAPIENTRY
 #endif
+#ifndef EGLAPIENTRYP
 #define EGLAPIENTRYP EGLAPIENTRY*
-
-/* The types NativeDisplayType, NativeWindowType, and NativePixmapType
- * are aliases of window-system-dependent types, such as X Display * or
- * Windows Device Context. They must be defined in platform-specific
- * code below. The EGL-prefixed versions of Native*Type are the same
- * types, renamed in EGL 1.3 so all types in the API start with "EGL".
- *
- * Khronos STRONGLY RECOMMENDS that you use the default definitions
- * provided below, since these changes affect both binary and source
- * portability of applications using EGL running on different EGL
- * implementations.
- */
-
-#if defined(_WIN32) || defined(__VC32__) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__) /* Win32 and WinCE */
-#ifndef WIN32_LEAN_AND_MEAN
-#define WIN32_LEAN_AND_MEAN 1
 #endif
-#include <windows.h>
-
-typedef HDC     EGLNativeDisplayType;
-typedef HBITMAP EGLNativePixmapType;
-typedef HWND    EGLNativeWindowType;
-
-#elif defined(__WINSCW__) || defined(__SYMBIAN32__)  /* Symbian */
-
-typedef int   EGLNativeDisplayType;
-typedef void *EGLNativeWindowType;
-typedef void *EGLNativePixmapType;
-
-#elif defined(WL_EGL_PLATFORM)
-
-typedef struct wl_display     *EGLNativeDisplayType;
-typedef struct wl_egl_pixmap  *EGLNativePixmapType;
-typedef struct wl_egl_window  *EGLNativeWindowType;
-
-#elif defined(__GBM__)
-
-typedef struct gbm_device  *EGLNativeDisplayType;
-typedef struct gbm_bo      *EGLNativePixmapType;
-typedef void               *EGLNativeWindowType;
-
-#elif defined(ANDROID) /* Android */
-
-struct ANativeWindow;
-struct egl_native_pixmap_t;
-
-typedef struct ANativeWindow        *EGLNativeWindowType;
-typedef struct egl_native_pixmap_t  *EGLNativePixmapType;
-typedef void                        *EGLNativeDisplayType;
-
-#elif defined(__unix__)
-
-#ifdef MESA_EGL_NO_X11_HEADERS
-
-typedef void            *EGLNativeDisplayType;
-typedef khronos_uintptr_t EGLNativePixmapType;
-typedef khronos_uintptr_t EGLNativeWindowType;
-
-#else
-
-/* X11 (tentative)  */
-#include <X11/Xlib.h>
-#include <X11/Xutil.h>
+#ifndef EGLAPI
+#define EGLAPI extern
+#endif
 
-typedef Display *EGLNativeDisplayType;
-typedef Pixmap   EGLNativePixmapType;
-typedef Window   EGLNativeWindowType;
+#include <EGL/fbdev_window.h>
+#include <KHR/khrplatform.h>
 
-#endif /* MESA_EGL_NO_X11_HEADERS */
+typedef fbdev_window *NativeWindowType;
+typedef void *NativePixmapType;
+typedef void *NativeDisplayType;
 
-#else
-#error "Platform not recognized"
+#ifdef __cplusplus
+}
 #endif
 
 /* EGL 1.2 types, renamed for consistency in EGL 1.3 */
-typedef EGLNativeDisplayType NativeDisplayType;
-typedef EGLNativePixmapType  NativePixmapType;
-typedef EGLNativeWindowType  NativeWindowType;
-
-
-/* Define EGLint. This must be a signed integral type large enough to contain
- * all legal attribute names and values passed into and out of EGL, whether
- * their type is boolean, bitmask, enumerant (symbolic constant), integer,
- * handle, or other.  While in general a 32-bit integer will suffice, if
- * handles are 64 bit types, then EGLint should be defined as a signed 64-bit
+typedef NativeDisplayType EGLNativeDisplayType;
+typedef NativePixmapType EGLNativePixmapType;
+typedef NativeWindowType EGLNativeWindowType;
+
+/* Define EGLint. This must be an integral type large enough to contain
+ * all legal attribute names and values passed into and out of EGL,
+ * whether their type is boolean, bitmask, enumerant (symbolic
+ * constant), integer, handle, or other.
+ * While in general a 32-bit integer will suffice, if handles are
+ * represented as pointers, then EGLint should be defined as a 64-bit
  * integer type.
  */
-typedef khronos_int32_t EGLint;
+typedef int EGLint;
+
+#endif /* __EGLPLATFORM_H__ */
 
-#endif /* __eglplatform_h */
diff --git a/include/EGL/fbdev_window.h b/include/EGL/fbdev_window.h
new file mode 100644
index 0000000..5285f65
--- /dev/null
+++ b/include/EGL/fbdev_window.h
@@ -0,0 +1,69 @@
+/*
+ * This confidential and proprietary software may be used only as
+ * authorised by a licensing agreement from ARM Limited
+ * (C) COPYRIGHT 2008-2013 ARM Limited
+ * ALL RIGHTS RESERVED
+ * The entire notice above must be reproduced on all authorised
+ * copies and copies may only be made to the extent permitted
+ * by a licensing agreement from ARM Limited.
+ */
+
+/**
+ * @file fbdev_window.h
+ * @brief A window type for the framebuffer device (used by egl and tests)
+ */
+
+#ifndef _FBDEV_WINDOW_H_
+#define _FBDEV_WINDOW_H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+typedef enum
+{
+	FBDEV_PIXMAP_DEFAULT = 0,
+	FBDEV_PIXMAP_SUPPORTS_UMP = (1 << 0),
+	FBDEV_PIXMAP_ALPHA_FORMAT_PRE = (1 << 1),
+	FBDEV_PIXMAP_COLORSPACE_sRGB = (1 << 2),
+	FBDEV_PIXMAP_EGL_MEMORY = (1 << 3),     /* EGL allocates/frees this memory */
+	FBDEV_PIXMAP_DMA_BUF = (1 << 4),
+} fbdev_pixmap_flags;
+
+typedef struct fbdev_window
+{
+	unsigned short width;
+	unsigned short height;
+} fbdev_window;
+
+typedef struct fbdev_pixmap
+{
+	unsigned int height;
+	unsigned int width;
+	unsigned int bytes_per_pixel;
+	unsigned char buffer_size;
+	unsigned char red_size;
+	unsigned char green_size;
+	unsigned char blue_size;
+	unsigned char alpha_size;
+	unsigned char luminance_size;
+	fbdev_pixmap_flags flags;
+	unsigned short *data;
+	unsigned int format; /* extra format information in case rgbal is not enough, especially for YUV formats */
+} fbdev_pixmap;
+
+#if MALI_USE_DMA_BUF
+struct fbdev_dma_buf
+{
+	int fd;
+	int size;
+	void *ptr;
+};
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+
+#endif
diff --git a/include/Makefile.am b/include/Makefile.am
index 4921dae..2df251a 100644
--- a/include/Makefile.am
+++ b/include/Makefile.am
@@ -3,7 +3,8 @@ eglinclude_HEADERS = \
 	EGL/egl.h \
 	EGL/eglext.h \
 	EGL/eglmesaext.h \
-	EGL/eglplatform.h
+	EGL/eglplatform.h \
+	EGL/fbdev_window.h
 
 glesincludedir = $(includedir)/GLES
 glesinclude_HEADERS = \
