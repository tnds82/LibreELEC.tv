From 839211da81f5ac3dafd3d844fe54eeca3206e3ee Mon Sep 17 00:00:00 2001
From: Memphiz <memphis@machzwo.de>
Date: Mon, 21 Dec 2015 11:29:23 +0100
Subject: [PATCH] [GUIFont] - the BufferHandle is a GLUInt for gl and gles and
 a void * for dx

---
 xbmc/guilib/GUIFontCache.h   | 10 ++++++++--
 xbmc/guilib/GUIFontTTFGL.cpp |  4 ++--
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/xbmc/guilib/GUIFontCache.h b/xbmc/guilib/GUIFontCache.h
index d3599fc..994380c 100644
--- a/xbmc/guilib/GUIFontCache.h
+++ b/xbmc/guilib/GUIFontCache.h
@@ -38,6 +38,7 @@
 #include <cassert>
 
 #include "TransformMatrix.h"
+#include "system.h"
 
 #define FONT_CACHE_TIME_LIMIT (1000)
 #define FONT_CACHE_DIST_LIMIT (0.01f)
@@ -170,10 +171,15 @@ struct CGUIFontCacheDynamicPosition
 
 struct CVertexBuffer
 {
-  void *bufferHandle;
+#if defined(HAS_GL) || defined(HAS_GLES)
+  typedef unsigned int BufferHandleType;
+#elif defined(HAS_DX)
+  typedef void* BufferHandleType;
+#endif
+  BufferHandleType bufferHandle; // this is really a GLuint
   size_t size;
   CVertexBuffer() : bufferHandle(NULL), size(0), m_font(NULL) {}
-  CVertexBuffer(void *bufferHandle, size_t size, const CGUIFontTTFBase *font) : bufferHandle(bufferHandle), size(size), m_font(font) {}
+  CVertexBuffer(BufferHandleType bufferHandle, size_t size, const CGUIFontTTFBase *font) : bufferHandle(bufferHandle), size(size), m_font(font) {}
   CVertexBuffer(const CVertexBuffer &other) : bufferHandle(other.bufferHandle), size(other.size), m_font(other.m_font)
   {
     /* In practice, the copy constructor is only called before a vertex buffer
diff --git a/xbmc/guilib/GUIFontTTFGL.cpp b/xbmc/guilib/GUIFontTTFGL.cpp
index d19a2e0..2bc9962 100644
--- a/xbmc/guilib/GUIFontTTFGL.cpp
+++ b/xbmc/guilib/GUIFontTTFGL.cpp
@@ -232,7 +232,7 @@ void CGUIFontTTFGL::LastEnd()
       glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glMatrixModview.Get());
 
       // Bind the buffer to the OpenGL context's GL_ARRAY_BUFFER binding point
-      glBindBuffer(GL_ARRAY_BUFFER, (GLuint) m_vertexTrans[i].vertexBuffer->bufferHandle);
+      glBindBuffer(GL_ARRAY_BUFFER, m_vertexTrans[i].vertexBuffer->bufferHandle);
 
       // Do the actual drawing operation, split into groups of characters no
       // larger than the pre-determined size of the element array
@@ -285,7 +285,7 @@ CVertexBuffer CGUIFontTTFGL::CreateVertexBuffer(const std::vector<SVertex> &vert
   // Unbind GL_ARRAY_BUFFER
   glBindBuffer(GL_ARRAY_BUFFER, 0);
 
-  return CVertexBuffer((void *) bufferHandle, vertices.size() / 4, this);
+  return CVertexBuffer(bufferHandle, vertices.size() / 4, this);
 }
 
 void CGUIFontTTFGL::DestroyVertexBuffer(CVertexBuffer &buffer) const
From 1b75449070c92742742cf1e8d6ffb7fc55575a8b Mon Sep 17 00:00:00 2001
From: Memphiz <memphis@machzwo.de>
Date: Sun, 10 Jan 2016 15:00:07 +0100
Subject: [PATCH] [GUIFont] - fixed warning about BufferHandle initialisation
 after fa6f5d761b600b0a8b52db18168e540b03f79ceb

---
 xbmc/guilib/GUIFontCache.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/xbmc/guilib/GUIFontCache.h b/xbmc/guilib/GUIFontCache.h
index 994380c..7e16977 100644
--- a/xbmc/guilib/GUIFontCache.h
+++ b/xbmc/guilib/GUIFontCache.h
@@ -173,12 +173,14 @@ struct CVertexBuffer
 {
 #if defined(HAS_GL) || defined(HAS_GLES)
   typedef unsigned int BufferHandleType;
+#define  BUFFER_HANDLE_INIT 0
 #elif defined(HAS_DX)
   typedef void* BufferHandleType;
+#define BUFFER_HANDLE_INIT nullptr
 #endif
   BufferHandleType bufferHandle; // this is really a GLuint
   size_t size;
-  CVertexBuffer() : bufferHandle(NULL), size(0), m_font(NULL) {}
+  CVertexBuffer() : bufferHandle(BUFFER_HANDLE_INIT), size(0), m_font(NULL) {}
   CVertexBuffer(BufferHandleType bufferHandle, size_t size, const CGUIFontTTFBase *font) : bufferHandle(bufferHandle), size(size), m_font(font) {}
   CVertexBuffer(const CVertexBuffer &other) : bufferHandle(other.bufferHandle), size(other.size), m_font(other.m_font)
   {
From fd4cfbedb478b5ba57f406895d51ba547ba8d4a4 Mon Sep 17 00:00:00 2001
From: guidosarducci <guidosarducci@users.noreply.github.com>
Date: Mon, 5 Sep 2016 02:06:32 -0700
Subject: [PATCH] [GUIFont] - make BufferHandle explicit GLuint, use
 initializer consistently

---
 xbmc/guilib/GUIFontCache.h   | 14 +++++++-------
 xbmc/guilib/GUIFontTTFDX.cpp |  2 +-
 xbmc/guilib/GUIFontTTFGL.cpp |  2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/xbmc/guilib/GUIFontCache.h b/xbmc/guilib/GUIFontCache.h
index 7e16977..6e11c51 100644
--- a/xbmc/guilib/GUIFontCache.h
+++ b/xbmc/guilib/GUIFontCache.h
@@ -38,7 +38,7 @@
 #include <cassert>
 
 #include "TransformMatrix.h"
-#include "system.h"
+#include "system_gl.h"
 
 #define FONT_CACHE_TIME_LIMIT (1000)
 #define FONT_CACHE_DIST_LIMIT (0.01f)
@@ -125,7 +125,7 @@ class CGUIFontCache
   CGUIFontCache(CGUIFontTTFBase &font);
 
   ~CGUIFontCache();
- 
+
   Value &Lookup(Position &pos,
                 const vecColors &colors, const vecText &text,
                 uint32_t alignment, float maxPixelWidth,
@@ -172,13 +172,13 @@ struct CGUIFontCacheDynamicPosition
 struct CVertexBuffer
 {
 #if defined(HAS_GL) || defined(HAS_GLES)
-  typedef unsigned int BufferHandleType;
+  typedef GLuint BufferHandleType;
 #define  BUFFER_HANDLE_INIT 0
 #elif defined(HAS_DX)
   typedef void* BufferHandleType;
 #define BUFFER_HANDLE_INIT nullptr
 #endif
-  BufferHandleType bufferHandle; // this is really a GLuint
+  BufferHandleType bufferHandle;
   size_t size;
   CVertexBuffer() : bufferHandle(BUFFER_HANDLE_INIT), size(0), m_font(NULL) {}
   CVertexBuffer(BufferHandleType bufferHandle, size_t size, const CGUIFontTTFBase *font) : bufferHandle(bufferHandle), size(size), m_font(font) {}
@@ -187,14 +187,14 @@ struct CVertexBuffer
     /* In practice, the copy constructor is only called before a vertex buffer
      * has been attached. If this should ever change, we'll need another support
      * function in GUIFontTTFGL/DX to duplicate a buffer, given its handle. */
-    assert(other.bufferHandle == 0);
+    assert(other.bufferHandle == BUFFER_HANDLE_INIT);
   }
   CVertexBuffer &operator=(CVertexBuffer &other)
   {
     /* This is used with move-assignment semantics for initialising the object in the font cache */
-    assert(bufferHandle == 0);
+    assert(bufferHandle == BUFFER_HANDLE_INIT);
     bufferHandle = other.bufferHandle;
-    other.bufferHandle = 0;
+    other.bufferHandle = BUFFER_HANDLE_INIT;
     size = other.size;
     m_font = other.m_font;
     return *this;
diff --git a/xbmc/guilib/GUIFontTTFDX.cpp b/xbmc/guilib/GUIFontTTFDX.cpp
index 144c2dc..35045c6 100644
--- a/xbmc/guilib/GUIFontTTFDX.cpp
+++ b/xbmc/guilib/GUIFontTTFDX.cpp
@@ -206,7 +206,7 @@ void CGUIFontTTFDX::DestroyVertexBuffer(CVertexBuffer &buffer) const
     CD3DBuffer* vbuffer = reinterpret_cast<CD3DBuffer*>(buffer.bufferHandle);
     ClearReference((CGUIFontTTFDX*)this, vbuffer);
     SAFE_DELETE(vbuffer);
-    buffer.bufferHandle = 0;
+    buffer.bufferHandle = nullptr;
   }
 }
 
diff --git a/xbmc/guilib/GUIFontTTFGL.cpp b/xbmc/guilib/GUIFontTTFGL.cpp
index 2bc9962..8706bde 100644
--- a/xbmc/guilib/GUIFontTTFGL.cpp
+++ b/xbmc/guilib/GUIFontTTFGL.cpp
@@ -293,7 +293,7 @@ void CGUIFontTTFGL::DestroyVertexBuffer(CVertexBuffer &buffer) const
   if (buffer.bufferHandle != 0)
   {
     // Release the buffer name for reuse
-    glDeleteBuffers(1, (GLuint *) &buffer.bufferHandle);
+    glDeleteBuffers(1, &buffer.bufferHandle);
     buffer.bufferHandle = 0;
   }
 }
