From a3083313c6592313c60a35872afb6e01382ce448 Mon Sep 17 00:00:00 2001
From: kszaq <kszaquitto@gmail.com>
Date: Fri, 30 Sep 2016 12:56:24 +0200
Subject: [PATCH] [aml] Support for 4K H264 on S905X

S905X (and possibly newer chips) need to use VFORMAT_H264 for 4K decoding instead
of VFORMAT_H264_4K2K. We can determine which one to use by probing vcodec_profile:

S905:
h264:;
h264_4k2k:;

S905X:
h264:4k;
h264_4k2k:;
---
 xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp |  3 ++-
 xbmc/utils/AMLUtils.cpp                           | 15 +++++++++------
 xbmc/utils/AMLUtils.h                             |  2 +-
 3 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
index bd37e78..89dea6e 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
@@ -1493,7 +1493,8 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
       m_hints.stereo_mode = "top_bottom";
     }
     else if (hints.width > 1920 || hints.height > 1088)
-      am_private->video_format = VFORMAT_H264_4K2K;
+      if (aml_support_h264_4k2k() == 1)
+        am_private->video_format = VFORMAT_H264_4K2K;
   }
   switch (am_private->video_format)
   {
diff --git a/xbmc/utils/AMLUtils.cpp b/xbmc/utils/AMLUtils.cpp
index ee4e581..c2280ab 100644
--- a/xbmc/utils/AMLUtils.cpp
+++ b/xbmc/utils/AMLUtils.cpp
@@ -288,7 +288,7 @@ bool aml_support_hevc_4k2k()
   return (has_hevc_4k2k == 1);
 }
 
-bool aml_support_h264_4k2k()
+int aml_support_h264_4k2k()
 {
   static int has_h264_4k2k = -1;
 
@@ -296,12 +296,15 @@ bool aml_support_h264_4k2k()
   {
     std::string valstr;
     if (SysfsUtils::GetString("/sys/class/amstream/vcodec_profile", valstr) != 0)
-    {
-      return false;
-    }
-    return (valstr.find("h264_4k2k:") != std::string::npos);
+      has_h264_4k2k = 0;
+    else if (valstr.find("h264:4k") != std::string::npos)
+      has_h264_4k2k = 2;
+    else if (valstr.find("h264_4k2k:") != std::string::npos)
+      has_h264_4k2k = 1;
+    else
+      has_h264_4k2k = 0;
   }
-  return (has_h264_4k2k == 1);
+  return has_h264_4k2k;
 }
 
 void aml_set_audio_passthrough(bool passthrough)
diff --git a/xbmc/utils/AMLUtils.h b/xbmc/utils/AMLUtils.h
index 3b5f588..7c4bca8 100644
--- a/xbmc/utils/AMLUtils.h
+++ b/xbmc/utils/AMLUtils.h
@@ -49,7 +49,7 @@ void aml_set_stereo_mode(const int mode, const int view);
 bool aml_wired_present();
 bool aml_support_hevc();
 bool aml_support_hevc_4k2k();
-bool aml_support_h264_4k2k();
+int  aml_support_h264_4k2k();
 void aml_set_audio_passthrough(bool passthrough);
 bool aml_IsHdmiConnected();
 bool aml_mode_to_resolution(const char *mode, RESOLUTION_INFO *res);
-- 
1.8.3.1

